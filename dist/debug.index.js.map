{"version":3,"file":"debug.index.js","sources":["../output/main-thread/strings.js","../output/main-thread/nodes.js","../output/main-thread/worker.js","../output/main-thread/command.js","../output/main-thread/hydrator.js","../output/main-thread/mutator.js","../output/main-thread/install.js","../output/main-thread/index.js"],"sourcesContent":["/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet count = 0;\nconst STRINGS = new Map();\n/**\n * Return a string for the specified index.\n * @param index string index to retrieve.\n * @returns string in map for the index.\n */\nexport function getString(index) {\n    return STRINGS.get(index) || '';\n}\n/**\n * Stores a string for parsing from mutation\n * @param value string to store from background thread.\n */\nexport function storeString(value) {\n    STRINGS.set(++count, value);\n}\n//# sourceMappingURL=strings.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getString } from './strings';\nlet NODES;\nlet BASE_ELEMENT;\nexport function prepare(baseElement) {\n    NODES = new Map([[1, baseElement], [2, baseElement]]);\n    BASE_ELEMENT = baseElement;\n}\nexport function isTextNode(node) {\n    return ('nodeType' in node ? node.nodeType : node[0 /* nodeType */]) === 3 /* TEXT_NODE */;\n}\n/**\n * Create a real DOM Node from a skeleton Object (`{ nodeType, nodeName, attributes, children, data }`)\n * @example <caption>Text node</caption>\n *   createNode({ nodeType:3, data:'foo' })\n * @example <caption>Element node</caption>\n *   createNode({ nodeType:1, nodeName:'div', attributes:[{ name:'a', value:'b' }], childNodes:[ ... ] })\n */\nexport function createNode(skeleton) {\n    if (isTextNode(skeleton)) {\n        const node = document.createTextNode(getString(skeleton[5 /* textContent */]));\n        storeNode(node, skeleton[7 /* _index_ */]);\n        return node;\n    }\n    const namespace = skeleton[6 /* namespaceURI */] !== undefined ? getString(skeleton[6 /* namespaceURI */]) : undefined;\n    const node = namespace\n        ? document.createElementNS(namespace, getString(skeleton[1 /* nodeName */]))\n        : document.createElement(getString(skeleton[1 /* nodeName */]));\n    // TODO(KB): Restore Properties\n    // skeleton.properties.forEach(property => {\n    //   node[`${property.name}`] = property.value;\n    // });\n    // ((skeleton as TransferrableElement)[TransferrableKeys.childNodes] || []).forEach(childNode => {\n    //   if (childNode[TransferrableKeys.transferred] === NumericBoolean.FALSE) {\n    //     node.appendChild(createNode(childNode as TransferrableNode));\n    //   }\n    // });\n    storeNode(node, skeleton[7 /* _index_ */]);\n    return node;\n}\n/**\n * Returns the real DOM Element corresponding to a serialized Element object.\n * @param id\n * @return\n */\nexport function getNode(id) {\n    const node = NODES.get(id);\n    if (node && node.nodeName === 'BODY') {\n        // If the node requested is the \"BODY\"\n        // Then we return the base node this specific <amp-script> comes from.\n        // This encapsulates each <amp-script> node.\n        return BASE_ELEMENT;\n    }\n    return node;\n}\n/**\n * Establish link between DOM `node` and worker-generated identifier `id`.\n *\n * These _shouldn't_ collide between instances of <amp-script> since\n * each element creates it's own pool on both sides of the worker\n * communication bridge.\n * @param node\n * @param id\n */\nexport function storeNode(node, id) {\n    node._index_ = id;\n    NODES.set(id, node);\n}\n//# sourceMappingURL=nodes.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(KB): Fetch Polyfill for IE11.\nexport function createWorker(workerDomURL, authorScriptURL) {\n    return Promise.all([fetch(workerDomURL).then(response => response.text()), fetch(authorScriptURL).then(response => response.text())])\n        .then(([workerScript, authorScript]) => {\n        // TODO(KB): Minify this output during build process.\n        const keys = [];\n        for (let key in document.body.style) {\n            keys.push(`'${key}'`);\n        }\n        const code = `\n        'use strict';\n        ${workerScript}\n        (function() {\n          var self = this;\n          var window = this;\n          var document = this.document;\n          var localStorage = this.localStorage;\n          var location = this.location;\n          var defaultView = document.defaultView;\n          var Node = defaultView.Node;\n          var Text = defaultView.Text;\n          var Element = defaultView.Element;\n          var SVGElement = defaultView.SVGElement;\n          var Document = defaultView.Document;\n          var Event = defaultView.Event;\n          var MutationObserver = defaultView.MutationObserver;\n\n          function addEventListener(type, handler) {\n            return document.addEventListener(type, handler);\n          }\n          function removeEventListener(type, handler) {\n            return document.removeEventListener(type, handler);\n          }\n          this.appendKeys([${keys}]);\n          ${authorScript}\n        }).call(WorkerThread.workerDOM);\n//# sourceURL=${encodeURI(authorScriptURL)}`;\n        return new Worker(URL.createObjectURL(new Blob([code])));\n    })\n        .catch(error => {\n        return null;\n    });\n}\nexport function messageToWorker(worker, message) {\n    worker.postMessage(message);\n}\n//# sourceMappingURL=worker.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { messageToWorker } from './worker';\nimport { getNode } from './nodes';\nimport { getString } from './strings';\nconst KNOWN_LISTENERS = [];\n/**\n * Instead of a whitelist of elements that need their value tracked, use the existence\n * of a property called value to drive the decision.\n * @param node node to check if values should be tracked.\n * @return boolean if the node should have its value property tracked.\n */\nconst shouldTrackChanges = (node) => node && 'value' in node;\n/**\n * When a node that has a value needing synced doesn't already have an event listener\n * listening for changed values, ensure the value is synced with a default listener.\n * @param worker whom to dispatch value toward.\n * @param node node to listen to value changes on.\n */\nexport const applyDefaultChangeListener = (worker, node) => {\n    shouldTrackChanges(node) && node.onchange === null && (node.onchange = () => fireValueChange(worker, node));\n};\n/**\n * Tell the worker DOM what the value is for a Node.\n * @param worker whom to dispatch value toward.\n * @param node where to get the value from.\n */\nconst fireValueChange = (worker, node) => {\n    messageToWorker(worker, {\n        [9 /* type */]: 5 /* SYNC */,\n        [38 /* sync */]: {\n            [7 /* _index_ */]: node._index_,\n            [18 /* value */]: node.value,\n        },\n    });\n};\n/**\n * Register an event handler for dispatching events to worker thread\n * @param worker whom to dispatch events toward\n * @param _index_ node index the event comes from (used to dispatchEvent in worker thread).\n * @return eventHandler function consuming event and dispatching to worker thread\n */\nconst eventHandler = (worker, _index_) => (event) => {\n    if (shouldTrackChanges(event.currentTarget)) {\n        fireValueChange(worker, event.currentTarget);\n    }\n    messageToWorker(worker, {\n        [9 /* type */]: 1 /* EVENT */,\n        [37 /* event */]: {\n            [7 /* _index_ */]: _index_,\n            [22 /* bubbles */]: event.bubbles,\n            [23 /* cancelable */]: event.cancelable,\n            [24 /* cancelBubble */]: event.cancelBubble,\n            [25 /* currentTarget */]: {\n                [7 /* _index_ */]: event.currentTarget._index_,\n                [8 /* transferred */]: 1 /* TRUE */,\n            },\n            [26 /* defaultPrevented */]: event.defaultPrevented,\n            [27 /* eventPhase */]: event.eventPhase,\n            [28 /* isTrusted */]: event.isTrusted,\n            [29 /* returnValue */]: event.returnValue,\n            [10 /* target */]: {\n                [7 /* _index_ */]: event.target._index_,\n                [8 /* transferred */]: 1 /* TRUE */,\n            },\n            [30 /* timeStamp */]: event.timeStamp,\n            [9 /* type */]: event.type,\n            [32 /* keyCode */]: 'keyCode' in event ? event.keyCode : undefined,\n        },\n    });\n};\n/**\n * Process commands transfered from worker thread to main thread.\n * @param nodesInstance nodes instance to execute commands against.\n * @param worker whom to dispatch events toward.\n * @param mutation mutation record containing commands to execute.\n */\nexport function process(worker, mutation) {\n    const _index_ = mutation[10 /* target */];\n    const target = getNode(_index_);\n    (mutation[21 /* removedEvents */] || []).forEach(eventSub => {\n        processListenerChange(worker, target, false, getString(eventSub[9 /* type */]), eventSub[33 /* index */]);\n    });\n    (mutation[20 /* addedEvents */] || []).forEach(eventSub => {\n        processListenerChange(worker, target, true, getString(eventSub[9 /* type */]), eventSub[33 /* index */]);\n    });\n}\n/**\n * If the worker requests to add an event listener to 'change' for something the foreground thread is already listening to\n * ensure that only a single 'change' event is attached to prevent sending values multiple times.\n * @param worker worker issuing listener changes\n * @param target node to change listeners on\n * @param addEvent is this an 'addEvent' or 'removeEvent' change\n * @param type event type requested to change\n * @param index number in the listeners array this event corresponds to.\n */\nexport function processListenerChange(worker, target, addEvent, type, index) {\n    let changeEventSubscribed = target.onchange !== null;\n    const shouldTrack = shouldTrackChanges(target);\n    const isChangeEvent = type === 'change';\n    if (addEvent) {\n        if (isChangeEvent) {\n            changeEventSubscribed = true;\n            target.onchange = null;\n        }\n        target.addEventListener(type, (KNOWN_LISTENERS[index] = eventHandler(worker, target._index_)));\n    }\n    else {\n        if (isChangeEvent) {\n            changeEventSubscribed = false;\n        }\n        target.removeEventListener(type, KNOWN_LISTENERS[index]);\n    }\n    if (shouldTrack && !changeEventSubscribed) {\n        applyDefaultChangeListener(worker, target);\n    }\n}\n//# sourceMappingURL=command.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { storeNode, getNode, createNode, isTextNode } from './nodes';\nimport { storeString, getString } from './strings';\nimport { applyDefaultChangeListener, processListenerChange } from './command';\nfunction allTextNodes(nodes) {\n    return nodes.length > 0 && [].every.call(nodes, isTextNode);\n}\n/**\n * Replace all the children with the ones from the HydrateableNode.\n * Used when we're certain the content won't break the page.\n * @param nodes HydrateableNodes containing content to potentially overwrite main thread content.\n * @param parent Node in the main thread that will be the parent of the passed nodes.\n * @param worker worker that issued the request for hydration.\n */\nfunction replaceNodes(nodes, parent, worker) {\n    [].forEach.call(parent.childNodes, (childNode) => childNode.remove());\n    nodes.forEach((node, index) => {\n        const newNode = createNode(node);\n        (node[2 /* attributes */] || []).forEach(attribute => {\n            const namespaceURI = getString(attribute[0]);\n            if (namespaceURI !== 'null') {\n                newNode.setAttributeNS(namespaceURI, getString(attribute[1]), getString(attribute[2]));\n            }\n            else {\n                newNode.setAttribute(getString(attribute[1]), getString(attribute[2]));\n            }\n        });\n        parent.appendChild(newNode);\n        applyDefaultChangeListener(worker, newNode);\n        replaceNodes(node[4 /* childNodes */] || [], parent.childNodes[index], worker);\n    });\n}\n/**\n * Hydrate a single node and it's children safely.\n * Attempt to ensure content is a rough match so content doesn't shift between the document representation\n * and client side generated content.\n * @param transferNode root of the background thread content (document.body from worker-thread).\n * @param node root for the foreground thread content (element upgraded to background driven).\n * @param worker worker that issued the request for hydration.\n */\nfunction hydrateNode(transferNode, node, worker) {\n    const transferIsText = isTextNode(transferNode);\n    const nodeIsText = isTextNode(node);\n    if (!transferIsText && !nodeIsText) {\n        const childNodes = transferNode[4 /* childNodes */] || [];\n        if (childNodes.length !== node.childNodes.length) {\n            // If this parent node has an unequal number of childNodes, we need to ensure its for an allowable reason.\n            if (allTextNodes(childNodes) && allTextNodes(node.childNodes)) {\n                // Offset due to a differing number of text nodes.\n                // replace the current DOM with the text nodes from the hydration.\n                replaceNodes(childNodes, node, worker);\n            }\n            else {\n                const filteredTransfer = childNodes.filter(childNode => !isTextNode(childNode));\n                const filteredNodes = [].filter.call(node.childNodes, (childNode) => !isTextNode(childNode));\n                // Empty text nodes are used by frameworks as placeholders for future dom content.\n                if (filteredTransfer.length === filteredNodes.length) {\n                    storeNode(node, transferNode[7 /* _index_ */]);\n                    replaceNodes(childNodes, node, worker);\n                }\n            }\n        }\n        else {\n            storeNode(node, transferNode[7 /* _index_ */]);\n            applyDefaultChangeListener(worker, node);\n            // Same number of children, hydrate them.\n            childNodes.forEach((childNode, index) => hydrateNode(childNode, node.childNodes[index], worker));\n        }\n    }\n    else if (transferIsText && nodeIsText) {\n        // Singular text node, no children.\n        storeNode(node, transferNode[7 /* _index_ */]);\n        node.textContent = getString(transferNode[5 /* textContent */]);\n        applyDefaultChangeListener(worker, node);\n    }\n}\n/**\n * Hydrate a root from the worker thread by comparing with the main thread representation.\n * @param skeleton root of the background thread content.\n * @param addEvents events needing subscription from the background thread content.\n * @param baseElement root of the main thread content to compare against.\n * @param worker worker issuing the upgrade request.\n */\nexport function hydrate(skeleton, stringValues, addEvents, baseElement, worker) {\n    // Process String Additions\n    stringValues.forEach(value => storeString(value));\n    // Process Node Addition / Removal\n    hydrateNode(skeleton, baseElement, worker);\n    // Process Event Addition\n    addEvents.forEach(event => {\n        const node = getNode(event[7 /* _index_ */]);\n        node && processListenerChange(worker, node, true, getString(event[9 /* type */]), event[33 /* index */]);\n    });\n}\n//# sourceMappingURL=hydrator.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNode, createNode } from './nodes';\nimport { storeString, getString } from './strings';\nimport { process } from './command';\nlet MUTATION_QUEUE = [];\nlet PENDING_MUTATIONS = false;\nlet worker;\nexport function prepareMutate(passedWorker) {\n    worker = passedWorker;\n}\nconst mutators = {\n    [2 /* CHILD_LIST */](mutation, target, sanitizer) {\n        (mutation[12 /* removedNodes */] || []).forEach(node => getNode(node[7 /* _index_ */]).remove());\n        const addedNodes = mutation[11 /* addedNodes */];\n        const nextSibling = mutation[14 /* nextSibling */];\n        if (addedNodes) {\n            addedNodes.forEach(node => {\n                let newChild = getNode(node[7 /* _index_ */]);\n                if (!newChild) {\n                    newChild = createNode(node);\n                    if (sanitizer) {\n                        sanitizer.sanitize(newChild); // TODO(choumx): Inform worker?\n                    }\n                }\n                target.insertBefore(newChild, (nextSibling && getNode(nextSibling[7 /* _index_ */])) || null);\n            });\n        }\n    },\n    [0 /* ATTRIBUTES */](mutation, target, sanitizer) {\n        const attributeName = mutation[15 /* attributeName */] !== undefined ? getString(mutation[15 /* attributeName */]) : null;\n        const value = mutation[18 /* value */] !== undefined ? getString(mutation[18 /* value */]) : null;\n        if (attributeName != null && value != null) {\n            if (!sanitizer || sanitizer.validAttribute(target.nodeName, attributeName, value)) {\n                target.setAttribute(attributeName, value);\n            }\n            else {\n                // TODO(choumx): Inform worker?\n            }\n        }\n    },\n    [1 /* CHARACTER_DATA */](mutation, target) {\n        const value = mutation[18 /* value */];\n        if (value) {\n            // Sanitization not necessary for textContent.\n            target.textContent = getString(value);\n        }\n    },\n    [3 /* PROPERTIES */](mutation, target, sanitizer) {\n        const propertyName = mutation[17 /* propertyName */] !== undefined ? getString(mutation[17 /* propertyName */]) : null;\n        const value = mutation[18 /* value */] !== undefined ? getString(mutation[18 /* value */]) : null;\n        if (propertyName && value) {\n            if (!sanitizer || sanitizer.validProperty(target.nodeName, propertyName, value)) {\n                target[propertyName] = value;\n            }\n            else {\n                // TODO(choumx): Inform worker?\n            }\n        }\n    },\n    [4 /* COMMAND */](mutation) {\n        process(worker, mutation);\n    },\n};\n/**\n * Process MutationRecords from worker thread applying changes to the existing DOM.\n * @param nodes New nodes to add in the main thread with the incoming mutations.\n * @param mutations Changes to apply in both graph shape and content of Elements.\n * @param sanitizer Sanitizer to apply to content if needed.\n */\nexport function mutate(nodes, stringValues, mutations, sanitizer) {\n    //mutations: TransferrableMutationRecord[]): void {\n    // TODO(KB): Restore signature requiring lastMutationTime. (lastGestureTime: number, mutations: TransferrableMutationRecord[])\n    // if (performance.now() || Date.now() - lastGestureTime > GESTURE_TO_MUTATION_THRESHOLD) {\n    //   return;\n    // }\n    // this.lastGestureTime = lastGestureTime;\n    stringValues.forEach(value => storeString(value));\n    nodes.forEach(node => createNode(node));\n    MUTATION_QUEUE = MUTATION_QUEUE.concat(mutations);\n    if (!PENDING_MUTATIONS) {\n        PENDING_MUTATIONS = true;\n        requestAnimationFrame(() => syncFlush(sanitizer));\n    }\n}\n/**\n * Apply all stored mutations syncronously. This method works well, but can cause jank if there are too many\n * mutations to apply in a single frame.\n *\n * Investigations in using asyncFlush to resolve are worth considering.\n */\nfunction syncFlush(sanitizer) {\n    MUTATION_QUEUE.forEach(mutation => {\n        mutators[mutation[9 /* type */]](mutation, getNode(mutation[10 /* target */]), sanitizer);\n    });\n    MUTATION_QUEUE = [];\n    PENDING_MUTATIONS = false;\n}\n//# sourceMappingURL=mutator.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { hydrate } from './hydrator';\nimport { prepareMutate, mutate } from './mutator';\nimport { createWorker } from './worker';\nimport { prepare as prepareNodes } from './nodes';\nexport function install(baseElement, workerDOMUrl, sanitizer) {\n    const authorURL = baseElement.getAttribute('src');\n    if (authorURL === null) {\n        return;\n    }\n    createWorker(workerDOMUrl, authorURL).then(worker => {\n        if (worker === null) {\n            return;\n        }\n        prepareNodes(baseElement);\n        prepareMutate(worker);\n        worker.onmessage = ({ data }) => {\n            switch (data[9 /* type */]) {\n                case 2 /* HYDRATE */:\n                    // console.info(`hydration from worker: ${data.type}`, data);\n                    hydrate(data[35 /* nodes */], data[39 /* strings */], data[20 /* addedEvents */], baseElement, worker);\n                    break;\n                case 3 /* MUTATE */:\n                    // console.info(`mutation from worker: ${data.type}`, data);\n                    mutate(data[35 /* nodes */], data[39 /* strings */], data[34 /* mutations */], sanitizer);\n                    break;\n            }\n        };\n    });\n}\n//# sourceMappingURL=install.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { install } from './install';\nexport function upgradeElement(baseElement, workerDOMUrl) {\n    install(baseElement, workerDOMUrl);\n}\n//# sourceMappingURL=index.js.map"],"names":["prepareNodes"],"mappings":"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"}